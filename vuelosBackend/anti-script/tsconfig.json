{
  "compilerOptions": {
    "target": "ES2017", // O "ES2020" / "ESNext" si prefieres características más modernas
    "lib": ["esnext", "dom"], // Se vuelve a incluir "dom" para las APIs del navegador usadas en Playwright
    "allowJs": true, // Permite que TypeScript procese archivos JavaScript
    "skipLibCheck": true, // Omite la verificación de tipos de librerías de terceros (puede acelerar la compilación)
    "strict": true, // Habilita todas las opciones estrictas de verificación de tipos
    "noEmit": false, // ¡CRÍTICO! Permite que TypeScript genere archivos JavaScript compilados
    "esModuleInterop": true, // Permite la interoperabilidad entre CommonJS y ES Modules
    "module": "esnext", // Usa ES Modules (import/export) en el código compilado
    "moduleResolution": "node", // Usa la estrategia de resolución de módulos de Node.js
    "resolveJsonModule": true, // Permite importar archivos .json
    "isolatedModules": true, // Asegura que cada archivo TS se compile de forma independiente
    "outDir": "./dist", // Directorio de salida para los archivos JavaScript compilados
    "forceConsistentCasingInFileNames": true, // Asegura que los nombres de archivo sigan un casing consistente
    "typeRoots": ["./node_modules/@types"], // Donde TypeScript buscará las definiciones de tipos
    "types": ["node"] // Solo incluimos "node", dejando que Jest se descubra automáticamente si está instalado
  },
  "include": [
    "src/**/*.ts", // Incluye todos los archivos .ts dentro de la carpeta src
    "src/**/*.tsx" // Incluye todos los archivos .tsx dentro de la carpeta src (si tienes JSX en el backend)
  ],
  "exclude": [
    "node_modules", // Excluye la carpeta de módulos
    "dist", // Excluye la carpeta de salida para evitar bucles de compilación
    "**/*.spec.ts" // Excluye archivos de prueba si no quieres compilarlos con el código de producción
  ]
}
